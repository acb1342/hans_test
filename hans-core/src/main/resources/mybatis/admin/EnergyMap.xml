<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hans.sses.admin.dao.EnergyDaoMybatis">
		
	<select id="getCount" parameterType="java.util.Map" resultType="int">
	  SELECT  COUNT(*)
      	FROM TBL_LOG_INFO
      	<where>
      		<if test="param.searchType != null">
	      		<choose>
	                <when test="param.searchType == 'id' ">
	                    AND USER_NAME like  CONCAT('%',#{param.searchValue},'%')
	                </when>
	                <otherwise>
	                    AND MACADDRESS like  CONCAT('%',#{param.searchValue},'%')
	                </otherwise>
            	</choose>
			</if>
		</where>
	</select>
	
	
	<select id="getEnergyList" parameterType="java.util.Map" resultType="java.util.Map">
	  SELECT USER_NAME AS userName
      			, (CASE(EVENT_TYPE) WHEN '0' THEN '전원OFF' WHEN '1' THEN '전원ON'  WHEN '2' THEN '절약모드ON'  WHEN '3' THEN '절약모드OFF'  WHEN '4' THEN '사용중' ELSE '상태모름' END) AS eventType
      			, MACADDRESS AS macAddress
      			, TIME_FORMAT(SEC_TO_TIME(UPTIME), '%H 시간 %i 분 %s 초')  AS upTime
				, TIME_FORMAT(SEC_TO_TIME(SAVINGTIME), '%H 시간 %i 분 %s 초')  AS savingTime
      			, DATE_FORMAT(REG_DATE, '%Y-%m-%d') AS regDate
      	FROM TBL_LOG_INFO
      	<where>
      		<if test="param.searchType != null">
	      		<choose>
	                <when test="param.searchType == 'id' ">
	                    AND USER_NAME like  CONCAT('%',#{param.searchValue},'%')
	                </when>
	                <otherwise>
	                    AND MACADDRESS like  CONCAT('%',#{param.searchValue},'%')
	                </otherwise>
            	</choose>
			</if>
		</where>
		ORDER BY REG_DATE DESC
		LIMIT #{param.startRow}, #{param.rowPerPage}	
	</select>
	
	
	<insert id="EnergyCreate" parameterType="java.util.Map">
	  insert into TBL_LOG_INFO (EVENT_TYPE, USER_NAME, MACADDRESS, ACC_WATT, UPTIME, SAVINGTIME, REG_DATE)
	  values (#{param.eventType}
	  ,(SELECT U.USER_NAME FROM TBL_USER_EQUIPMENT E, TBL_USER_INFO U WHERE E.USER_SEQ = U.USER_SEQ AND E.MACADDRESS = #{param.macAddress})
	  ,#{param.macAddress},#{param.watt},#{param.uptime},#{param.savingTime},#{param.regDate})
	</insert>
	
	
	 
	<select id="getDayEnergyList" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT userName, macAddress, sum(totWatt) AS sumTotWatt, regDate from(
	  SELECT L.USER_NAME AS userName
      			, L.MACADDRESS AS macAddress	
      			, L.ACC_WATT AS watt
      			, DATE_FORMAT(L.REG_DATE,'%Y-%m-%d') AS regDate
      			, (max(L.uptime) - max(L.savingtime))* E.WATT as totWatt
      	FROM TBL_LOG_INFO L, TBL_EQUIPMENT_INFO E
      	<where>
      		L.MACADDRESS = E.MACADDRESS
      	   AND DATE_FORMAT(L.REG_DATE,'%Y%m%d') <![CDATA[>=]]> #{param.beforeday} and DATE_FORMAT(L.REG_DATE,'%Y%m%d') <![CDATA[<=]]> #{param.afterday}
      	
	      	<choose>
	      		<when test="param.searchType == 'user' ">
		          AND L.USER_NAME = #{param.searchValue}
	          </when>
	          <otherwise>
	             AND L.MACADDRESS = #{param.searchValue}
	          </otherwise>
	       </choose>
      	
		</where>
		GROUP BY regDate, E.MACADDRESS
		ORDER BY L.REG_DATE ASC
		) day
		GROUP BY regDate
	</select>
	
	
	<select id="getMonEnergyList" parameterType="java.util.Map" resultType="java.util.Map">
	SELECT userName, macAddress, sum(daysumTotWatt) AS sumTotWatt, DATE_FORMAT(dayregDate,'%Y-%m') AS regDate from(
	
	SELECT userName, macAddress, sum(totWatt) AS daysumTotWatt, dayregDate from(
	  SELECT L.USER_NAME AS userName
      			, L.MACADDRESS AS macAddress	
      			, L.ACC_WATT AS watt
      			, DATE_FORMAT(L.REG_DATE,'%Y-%m-%d') AS dayregDate
      			, (max(L.uptime) - max(L.savingtime))* E.WATT as totWatt
      	FROM TBL_LOG_INFO L, TBL_EQUIPMENT_INFO E
      	<where>
      		L.MACADDRESS = E.MACADDRESS
      	   AND DATE_FORMAT(L.REG_DATE,'%Y%m') <![CDATA[>=]]> DATE_FORMAT(STR_TO_DATE(#{param.beforeday},'%Y%m%d'),'%Y%m') and DATE_FORMAT(L.REG_DATE,'%Y%m') <![CDATA[<]]> DATE_FORMAT(DATE_ADD(STR_TO_DATE(#{param.afterday},'%Y%m%d'),interval 1 MONTH),'%Y%m')
      	
	      	<choose>
	      		<when test="param.searchType == 'user' ">
		          AND L.USER_NAME = #{param.searchValue}
	          </when>
	          <otherwise>
	             AND L.MACADDRESS = #{param.searchValue}
	          </otherwise>
	       </choose>
      	
		</where>
		GROUP BY dayregDate, E.MACADDRESS
		) day
		GROUP BY dayregDate
		) month
		GROUP BY regDate
	
	
	
	</select>
	
	
</mapper>