<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mobilepark.doit5.admin.dao.AdminDaoMybatisTest">
	
	<select id="getAdmin" parameterType="String" resultType="com.mobilepark.doit5.admin.model.Admin">
      SELECT  ADMIN_ID AS id
      			, ADMIN_GROUP_ID AS groupId
      			, PASSWD AS passwd
      			, NAME AS name
      			, GRADE AS grade
      			, AREA AS area
      			, MOBILE AS mobile
      			, TEL AS tel
      			, EMAIL AS email
      			, PUSH_TOKEN AS pushToken
      			, VALID_YN AS validYn
      			, PW_ERR_CNT AS pwErrCnt
      			, FST_RG_USID AS fstRgUsid
      			, FST_RG_DT AS fstRgDt
      			, LST_CH_USID AS lstChUsid
      			, LST_CH_DT AS lstChDt
      	FROM TB_MGMT_ADMIN
		<where>
			1 = 1
			<if test="userId != null">
				AND ADMIN_ID = #{userId}
			</if>
		</where>
	</select>
	
	<select id="getAdminGroup" parameterType="int" resultType="com.mobilepark.doit5.admin.model.AdminGroup">
		SELECT ADMIN_GROUP_ID AS id
				, NAME AS name
				, DESCRIPTION AS description
				, FST_RG_USID AS fstRgUsid
				, FST_RG_DT AS fstRgDt
      			, LST_CH_USID AS lstChUsid
      			, LST_CH_DT AS lstChDt
		FROM TB_MGMT_ADMIN_GROUP
		<where>
			1 = 1
			<if test="groupId != null">
				AND ADMIN_GROUP_ID = #{groupId}
			</if>
		</where>
	</select>
	
	<select id="searchGroupAuth" parameterType="int" resultType="com.mobilepark.doit5.admin.model.AdminGroupAuth">
		SELECT ADMIN_GROUP_ID AS adminGroupId
				, MENU_ID AS menuId
				, AUTH AS auth
				, FST_RG_USID AS fstRgUsid
				, FST_RG_DT AS fstRgDt
      			, LST_CH_USID AS lstChUsid
      			, LST_CH_DT AS lstChDt
		FROM TB_MGMT_ADMIN_GROUPAUTH
		<where>
			1 = 1
			<if test="groupId != null">
				AND ADMIN_GROUP_ID = #{groupId}
			</if>
		</where>
	</select>
	
	<insert id="createSession" parameterType="Map">
		INSERT INTO TB_MGMT_ADMIN_SESSION (ADMIN_ID, LEVEL, SESSION_ID, HOST, PORT, CHAN, FST_RG_USID, FST_RG_DT)
		VALUES (#{param.adminId}, #{param.level}, #{param.sessionId}, #{param.host}, #{param.port}, #{param.chan}, #{param.fstRgUsid}, #{param.fstRgDt})
	</insert>
	
	<delete id="deleteSession" parameterType="int">
		DELETE FROM TB_MGMT_ADMIN_SESSION
		<where>
			<if test="snId != null and snId > 0">
				SN_ID = #{snId}
			</if>
		</where>
	</delete>
	
	<select id="searchSession" parameterType="Map" resultType="Map">
		SELECT SN_ID AS id
				, ADMIN_ID AS adminId
				, SESSION_ID AS sessionId
				, LEVEL AS level
				, CHAN AS chan
				, HOST AS host
				, PORT AS port
				, FLAG AS flag
				, EDT AS edt
				, FST_RG_USID AS fstRgUsid
				, FST_RG_DT AS fstRgDt
				, LST_CH_USID AS lstChUsid
				, LST_CH_DT AS lstChDt
		FROM TB_MGMT_ADMIN_SESSION
		<where>
			1 = 1
			<if test="param.adminId != null">
				AND ADMIN_ID = #{param.adminId}
			</if>
			<if test="param.chan != null">
				AND CHAN = #{param.chan}
			</if>
			<if test="param.sessionId != null">
				AND SESSION_ID = #{param.sessionId}
			</if>
		</where>
	</select>
	
	<delete id="clearSessionAll" parameterType="String">
		DELETE FROM TB_MGMT_ADMIN_SESSION
		<where>
			<if test="chan != null">
				CHAN = #{chan}
			</if>
		</where>
	</delete>
	
	
	<!-- 신규 -->
	
	
	<select id="getCount" parameterType="java.util.Map" resultType="int">
	  SELECT  COUNT(*)
      	FROM TB_MGMT_ADMIN A, TB_MGMT_ADMIN_GROUP G
      	<where>
      		A.ADMIN_GROUP_ID = G.ADMIN_GROUP_ID 
      		AND A.ADMIN_GROUP_ID = 1
      		<if test="param.searchType != null">
	      		<choose>
	                <when test="param.searchType == 'id' ">
	                    AND A.ADMIN_ID like  CONCAT('%',#{param.searchValue},'%')
	                </when>
	                <otherwise>
	                    AND A.NAME like  CONCAT('%',#{param.searchValue},'%')
	                </otherwise>
            	</choose>
			</if>
			<if test="param.searchValid != null and param.searchValid != '' " >
				AND A.VALID_YN = #{param.searchValid}				
			</if>
		</where>
	</select>
	
	
	<select id="getAdminList" parameterType="java.util.Map" resultType="java.util.Map">
	  SELECT  @rownum:=@rownum+1 as num
	  			, A.ADMIN_ID AS id
      			, A.ADMIN_GROUP_ID AS groupId
      			, G.NAME AS groupName
      			, A.PASSWD AS passwd
      			, A.NAME AS name
      			, A.GRADE AS grade
      			, A.AREA AS area
      			, A.MOBILE AS mobile
      			, A.TEL AS tel
      			, A.EMAIL AS email
      			, A.PUSH_TOKEN AS pushToken
      			, A.VALID_YN AS validYn
      			, A.PW_ERR_CNT AS pwErrCnt
      			, A.FST_RG_USID AS fstRgUsid
      			, A.FST_RG_DT AS fstRgDt
      			, A.LST_CH_USID AS lstChUs
      	FROM TB_MGMT_ADMIN A, TB_MGMT_ADMIN_GROUP G, (SELECT @rownum:=0) r
      	<where>
      		A.ADMIN_GROUP_ID = G.ADMIN_GROUP_ID 
      		AND A.ADMIN_GROUP_ID = 1
      		<if test="param.searchType != null">
	      		<choose>
	                <when test="param.searchType == 'id' ">
	                    AND A.ADMIN_ID like  CONCAT('%',#{param.searchValue},'%')
	                </when>
	                <otherwise>
	                    AND A.NAME like  CONCAT('%',#{param.searchValue},'%')
	                </otherwise>
            	</choose>
			</if>
			<if test="param.searchValid != null and param.searchValid != '' " >
				AND A.VALID_YN = #{param.searchValid}				
			</if>
			
			LIMIT #{param.startRow}, #{param.PerPage}	
			
		</where>
	</select>
	
	<select id="getMemberDetail" parameterType="String" resultType="java.util.Map">
	  SELECT   A.ADMIN_ID AS id
      			, A.ADMIN_GROUP_ID AS groupId
      			, G.NAME AS groupName
      			, A.PASSWD AS passwd
      			, A.NAME AS name
      			, A.GRADE AS grade
      			, A.AREA AS area
      			, A.MOBILE AS mobile
      			, A.TEL AS tel
      			, A.EMAIL AS email
      			, A.PUSH_TOKEN AS pushToken
      			, A.VALID_YN AS validYn
      			, A.PW_ERR_CNT AS pwErrCnt
      			, A.FST_RG_USID AS fstRgUsid
      			, A.FST_RG_DT AS fstRgDt
      			, A.LST_CH_USID AS lstChUsid
      			, A.LST_CH_DT AS lstChDt
      	FROM TB_MGMT_ADMIN A, TB_MGMT_ADMIN_GROUP G 
      	<where>
      		A.ADMIN_GROUP_ID = G.ADMIN_GROUP_ID AND ADMIN_ID = #{id}
		</where>
	</select>
	
	
	<update id="MemberUpdate" parameterType="java.util.Map">
	  update TB_MGMT_ADMIN set
	    NAME = #{param.name},
	    TEL = #{param.tel},
	    MOBILE = #{param.mobile},
	    EMAIL = #{param.email},
	    VALID_YN = #{param.validYn},
	    LST_CH_DT = #{param.LstChDt}
	  where ADMIN_ID = #{param.id}
	</update>
	
	
	
	<insert id="MemberCreate" parameterType="java.util.Map">
	  insert into TB_MGMT_ADMIN (ADMIN_ID, ADMIN_GROUP_ID, NAME, PASSWD, TEL, EMAIL, MOBILE, AREA, VALID_YN, PW_ERR_CNT, FST_RG_USID, FST_RG_DT )
	  values (#{param.id},1,#{param.name},#{param.passwd},#{param.tel},#{param.email},#{param.mobile},#{param.area},#{param.ValidYn}, #{param.PwErrCnt}, #{param.FstRgUsid}, #{param.FstRgDt})
	</insert>
	
	<delete id="MemberDelete" parameterType="String">
	  delete from TB_MGMT_ADMIN where ADMIN_ID = #{id}
	</delete>
	
	
</mapper>