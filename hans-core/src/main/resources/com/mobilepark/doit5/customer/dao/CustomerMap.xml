<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="customer">

    <select id="selectMember" parameterType="Map" resultType="com.mobilepark.doit5.customer.model.Member">
        SELECT /* customer.selectMember */
        	  CM.USID as id
			, CM.STATUS as status
			, CM.PAYMENT_PLAN as paymentPlan
			, CM.PAYMENT_METHOD as paymentMethod
			, CM.OS as os
			, CM.DEVICE_ID as deviceId
			, CM.TEL as tel
			, CM.CERT_TOKEN as certToken    
			, CM.PUSH_TOKEN as pushToken
			, CM.TID_TOKEN as tidToken
			, CM.MDN as mdn
			, CM.CHNL_SUBS_DATE as chnlSubsDate
			, CM.PW_MOD_DATE as pwModDate
			, CM.SUB as sub
			, CM.EXP as exp
			, CM.IAT as iat
			, CM.IST as ist
			, CM.SUBS_ID as subsId    
			, CM.NAME as name
			, CM.BIRTH as birth
			, CM.SEX as sex
			, CM.NAME_VRFD as nameVrfd
			, CM.RCPT_AGR as rcptAgr
			, CM.RCPT_AGR_DATE as rcptAgrDate
			, CM.EMAIL_ADDR as emailAddr
			, CM.FST_RG_USID as fstRgUsid
			, CM.FST_RG_DT as fstRgDt
			, CM.LST_CH_USID as lstChUsid
			, CM.LST_CH_DT as lstChDt
			, CASE WHEN EXISTS(SELECT 1 FROM TB_CUST_CHARGE_COND WHERE USID = CM.USID)
				THEN 'Y'
				ELSE 'N'
			  END AS chargeCondYn
        FROM TB_CUST_MEMBER CM
        <where>
        	<if test="usid != null and usid != ''">
        		AND USID = #{usid}
        	</if>
        	<if test="cardNo != null and cardNo != ''">
        		AND USID = (SELECT USID FROM TB_CUST_RFID_CARD WHERE CARD_NO = #{cardNo})
        	</if>
        	<if test="subsId != null and subsId != ''">
        		AND SUBS_ID = #{subsId}
        	</if>
        </where>
    </select>
    
    <select id="selectChargeCondition" parameterType="Long" resultType="Map">
        SELECT /* customer.selectChargeCondition */
        	  USID as usid
        	, CHARGE_COND as chargeCond
        	, WATT as watt
        	, FST_RG_USID as fstRgUsid 
        	, FST_RG_DT as fstRgDt
        	, LST_CH_USID as lstChUsid
        	, LST_CH_DT  as lstChDt
        FROM TB_CUST_CHARGE_COND
        WHERE USID = #{usid}
    </select>
    
    
    <select id="selectRfidCardList" parameterType="map" resultType="map">
        SELECT /* customer.selectRfidCardList */
			  cfc.SN_ID AS snId
			, cfa.RC_DT AS rcDt
			, CASE WHEN cfc.STATUS IN ('308107', '308108') THEN RIGHT(cfc.CARD_NO, 4) ELSE '' END AS cardNo
			, cfc.RG_DT AS rgDt
			, cfc.ST_DT AS stDt
			, CASE WHEN cfc.STATUS = '308107' THEN '사용중' WHEN cfc.STATUS = '308108' THEN '사용중지' WHEN cfa.STATUS IN ('308102', '308103', '308104', '308105', '308106') THEN '신청중' END AS statusNm
			, CASE WHEN cfc.STATUS IN ('308107', '308108') THEN cfc.STATUS ELSE cfa.STATUS END AS status
		FROM TB_CUST_RFID_APPLICATION cfa
		LEFT JOIN TB_CUST_RFID_CARD cfc ON cfa.USID = cfc.USID AND cfa.CARD_NO = cfc.CARD_NO
		WHERE cfa.USID = #{usid}
		    AND (cfa.STATUS IN ('308102', '308103', '308104', '308105', '308106')
		      OR cfc.STATUS IN ('308107', '308108'))
		ORDER BY  CASE WHEN cfc.STATUS = '308107' THEN 1 WHEN cfc.STATUS = '308108' THEN 3 WHEN cfa.STATUS IN ('308102', '308103', '308104', '308105', '308106') THEN 2 END
				, IFNULL(IFNULL(cfc.LST_CH_DT, cfc.FST_RG_DT), IFNULL(cfa.LST_CH_DT, cfa.FST_RG_DT))
        LIMIT #{pagination.startRow}, #{pagination.size}
    </select>
    
    <select id="selectRfidCard" parameterType="map" resultType="map">
        SELECT /* customer.selectRfidCard */
			  SN_ID
			, CARD_NO
			, USID
			, STATUS
			, UID
			, RG_DT
			, ST_DT
			, FST_RG_USID
			, FST_RG_DT
			, LST_CH_USID
			, LST_CH_DT
		FROM TB_CUST_RFID_CARD
		WHERE USID = #{usid}
		  AND CARD_NO = #{cardNo}
    </select>
    
    
    <select id="selectRfidCardTotalCnt" parameterType="map" resultType="int">
        SELECT /* customer.selectRfidCardTotalCnt */
              COUNT(*) as cnt
        FROM TB_CUST_RFID_APPLICATION
        WHERE USID = #{usid}
    </select>
    
    <select id="selectCardCount" parameterType="Long" resultType="Long">
        <!-- SELECT
              COUNT(*) as cnt
        FROM TB_CUST_RFID_APPLICATION cfa LEFT JOIN TB_CUST_RFID_CARD cfc ON cfa.USID = cfc.USID AND cfa.CARD_NO = cfc.CARD_NO
		WHERE cfa.USID = #{usid}
			AND (cfa.STATUS IN ('308102', '308104', '308105', '308106') OR cfc.STATUS IN ('308107')) -->
			
        SELECT /* customer.selectCardCount */
        	SUM(A.cnt)
	    FROM (
		    SELECT
		              COUNT(*) cnt
	        FROM TB_CUST_RFID_APPLICATION
	        WHERE USID = #{usid}
		        AND STATUS IN('308102', '308104', '308105', '308106')
        
            UNION ALL
        
	        SELECT
	            COUNT(*) cnt
	        FROM TB_CUST_RFID_CARD     
	        WHERE USID = #{usid}
	            AND STATUS IN('308107')
        ) A
    </select>
    
    <insert id="insertMember" parameterType="com.mobilepark.doit5.customer.model.Member"
    		useGeneratedKeys="true" keyProperty="id">
    		
    	INSERT /* customer.insertMember */
    	INTO TB_CUST_MEMBER (
			  STATUS
			, PAYMENT_PLAN
			, PAYMENT_METHOD
			, OS
			, DEVICE_ID
			, TEL
			, CERT_TOKEN
			, PUSH_OS
			, PUSH_TOKEN
			, TID_TOKEN
			, MDN
			, CHNL_SUBS_DATE
			, PW_MOD_DATE
			, SUB
			, EXP
			, IAT
			, IST
			, SUBS_ID
			, NAME
			, BIRTH
			, SEX
			, NAME_VRFD
			, RCPT_AGR
			, RCPT_AGR_DATE
			, EMAIL_ADDR
			, FST_RG_USID
			, FST_RG_DT
			, LST_CH_USID
			, LST_CH_DT
        ) VALUES (
			  #{status}
			, #{paymentPlan}
			, #{paymentMethod}
			, #{os}
			, #{deviceId}
			, #{tel}
			, #{certToken}
			, #{pushOs}
			, #{pushToken}
			, #{tidToken}
			, #{mdn}
			, #{chnlSubsDate}
			, #{pwModDate}
			, #{sub}
			, #{exp}
			, #{iat}
			, #{ist}
			, #{subsId}
			, #{name}
			, #{birth}
			, #{sex}
			, #{nameVrfd}
			, #{rcptAgr}
			, #{rcptAgrDate}
			, #{emailAddr}
			, #{subsId}
			, NOW()
			, #{subsId}
			, NOW()
        )
    </insert>
    
    <update id="updateMember" parameterType="com.mobilepark.doit5.customer.model.Member">
    	UPDATE /* customer.updateMember */
    	TB_CUST_MEMBER
    	<set>
    		<if test="status != null and status != ''">STATUS = #{status},</if>
    		<if test="paymentPlan != null and paymentPlan != ''">PAYMENT_PLAN = #{paymentPlan},</if>
    		<if test="paymentMethod != null and paymentMethod  != ''">PAYMENT_METHOD = #{paymentMethod },</if>
    		<if test="tidToken != null and tidToken != ''">TID_TOKEN = #{tidToken},</if>
    		<if test="pwModDate != null and pwModDate != ''">PW_MOD_DATE = #{pwModDate},</if>
    		<if test="sub != null and sub != ''">SUB = #{sub},</if>
    		<if test="exp != null and exp != ''">EXP = #{exp},</if>
    		<if test="iat != null and iat != ''">IAT = #{iat},</if>
    		<if test="ist != null and ist != ''">IST = #{ist},</if>
    		<if test="subsId != null and subsId != ''">SUBS_ID = #{subsId},</if>
    		<if test="rcptAgr != null and rcptAgr != ''">RCPT_AGR = #{rcptAgr},</if>
    		<if test="rcptAgrDate != null and rcptAgrDate != ''">RCPT_AGR_DATE = #{rcptAgrDate},</if>
    		<if test="os != null and os != ''">OS = #{os},</if>
    		<if test="pushOs != null and pushOs != ''">PUSH_OS = #{pushOs},</if>
    		<if test="deviceId != null and deviceId != ''">DEVICE_ID = #{deviceId},</if>
    		<if test="pushToken != null and pushToken != ''">PUSH_TOKEN = #{pushToken},</if>
    		<if test="certToken != null and certToken != ''">CERT_TOKEN = #{certToken},</if>
    		<if test="mdn != null and mdn != ''">MDN = #{mdn},</if>
    		<if test="chnlSubsDate != null and chnlSubsDate != ''">CHNL_SUBS_DATE = #{chnlSubsDate},</if>
    		<if test="name != null and name != ''">NAME = #{name},</if>
    		<if test="birth != null and birth != ''">BIRTH = #{birth},</if>
    		<if test="sex != null and sex != ''">SEX = #{sex},</if>
    		<if test="nameVrfd != null and nameVrfd != ''">NAME_VRFD = #{nameVrfd},</if>
    		<if test="emailAddr != null and emailAddr != ''">EMAIL_ADDR = #{emailAddr},</if>
    		<if test="mdn != null and mdn != ''">MDN = #{mdn},</if>
    		LST_CH_DT = NOW(),
    		LST_CH_USID = #{id}
    	</set>
    	WHERE USID = #{id}
    </update>
    
    <insert id="insertChargeCondition" parameterType="Map">
    	INSERT /* customer.insertChargeCondition */
    	INTO TB_CUST_CHARGE_COND (
			  USID
			, CHARGE_COND
			, WATT
			, FST_RG_USID
			, FST_RG_DT
			, LST_CH_USID
			, LST_CH_DT
        ) VALUES (
			  #{usid}
			, #{chargeCond}
			, #{watt}
			, #{usid}
			, NOW()
			, #{usid}
			, NOW()
        )
    </insert>
    
    <insert id="insertCustHist" parameterType="map">
        INSERT INTO TB_HIST_CUST( /* customer.insertCustHist */
              FST_RG_DT
            , USID
            , ACCESS_DEVICE
            , LOG_TYPE
            , RESULT_CODE
            , CERT_CARD_NO
            , ADD_INFO
            , FST_RG_USID
            , LST_CH_USID
            , LST_CH_DT
        )
        VALUES (
              NOW()
            , #{usid}
            , #{accessDevice}
            , #{logType}
            , #{resultCode}
            , #{certCardNo}
            , #{addInfo}
            , #{usid}
            , #{usid}
            , NOW()
        )
    </insert>
    
    <!-- 탈퇴 정보 삭제 -->
    <delete id="deleteCustClose" parameterType="Long">
        DELETE /* customer.deleteCustClose */
        FROM TB_CUST_CLOSE
        WHERE USID = #{usid}
    </delete>
    
    <select id="selectConformCardList" parameterType="Long" resultType="Map">
        SELECT /* customer.selectConformCardList */
            CARD_NO as cardNo
        FROM TB_CUST_RFID_CARD     
        WHERE USID = #{usid}
            AND STATUS IN('308107')
    </select>
    
    <select id="selectUsid" parameterType="String" resultType="Long">
        SELECT /* customer.selectUsid */
            USID as usid
        FROM TB_CUST_MEMBER     
        WHERE EMAIL_ADDR = #{id}
            AND STATUS = '301102'
        ORDER BY USID DESC
        LIMIT 1
    </select>
    
    <delete id="deleteCustCar" parameterType="Long">
        DELETE /* customer.deleteCustCar */
        FROM TB_CUST_CAR
        WHERE USID = #{usid}
    </delete>
    
    <update id="updateDeviceId" parameterType="Long">
        UPDATE /* customer.updateDeviceId */ 
        TB_CUST_MEMBER
        SET STATUS = '301103',
        	DEVICE_ID = NULL,
        	LST_CH_USID = #{usid},
        	LST_CH_DT = NOW()
        WHERE USID = #{usid}
    </update>
    
    <update id="updateStopCard" parameterType="Map">
        UPDATE  /* customer.updateStopCard */
        TB_CUST_RFID_CARD
        SET STATUS = #{status},
            ST_DT = NOW(),
        	LST_CH_USID = #{usid},
        	LST_CH_DT = NOW()
        WHERE USID = #{usid}
    </update>
    
    <!-- NFC 토큰이 사용된적 있는지 검사 -->
    <select id="isUsedNfcToken" parameterType="String" resultType="java.lang.Boolean">
		SELECT /* customer.isUsedNfcToken */
			COUNT(*) > 0
		FROM TB_HIST_CHARGE
		WHERE CERT_TYPE = '315101'
		  AND CERT_CARD_NO = #{certCardNo}
	</select>
	
	<insert id="insertCustClose"  parameterType="Map">
	   INSERT INTO TB_CUST_CLOSE( /* customer.insertCustClose */
              USID
            , TYPE
            , ETC_CONTENT
            , FST_RG_USID
            , FST_RG_DT
            , LST_CH_USID
            , LST_CH_DT
        )
        VALUES (
              #{usid}
            , #{type}
            , #{etcContent}
            , #{usid}
            , NOW()
            , #{usid}
            , NOW()
        )
	</insert>
	
	<select id="selectCreditCard" parameterType="Long" resultType="Map">
		SELECT /* customer.selectCreditCard */
			  USID
			, COMPANY
			, CREDIT_CARD_NO
			, PAYMENT_DAY
			, BILLKEY
			, FST_RG_USID
			, FST_RG_DT
			, LST_CH_USID
			, LST_CH_DT
		FROM TB_CUST_CREDIT_CARD
		WHERE USID = #{usid}
	</select>
	
	<update id="updateBillKey" parameterType="Map">
		UPDATE /* customer.updateBillKey */
		TB_CUST_MEMBER
		SET	  STATUS = '301102'
			, PAYMENT_METHOD = '301301'
			, PAYMENT_PLAN = '302202'
			, LST_CH_USID = #{usid}
			, LST_CH_DT = NOW()
		WHERE USID = #{usid}
	</update>
	
	<insert id="insertCreditCard" parameterType="Map">
		INSERT /* customer.insertCreditCard */
		INTO TB_CUST_CREDIT_CARD (
			  USID
			, COMPANY
			, CREDIT_CARD_NO
			, PAYMENT_DAY
			, BILLKEY
			, FST_RG_USID
			, FST_RG_DT
			, LST_CH_USID
			, LST_CH_DT
		) VALUES (
			  #{usid}
			, #{company}
			, #{creditCardNo}
			, #{paymentDay}
			, #{billKey}
			, #{usid}
			, NOW()
			, #{usid}
			, NOW()
		)
	</insert>
	
	<update id="updateCreditCard" parameterType="Map">
		UPDATE /* customer.updateCreditCard */
		TB_CUST_CREDIT_CARD
		SET   COMPANY = #{company}
			, CREDIT_CARD_NO = #{creditCardNo}
			, BILLKEY = #{billKey}
			, LST_CH_USID = #{usid}
			, LST_CH_DT = NOW()
		WHERE USID = #{usid}
	</update>
	
	<select id="selectUserDetail" parameterType="Long" resultType="Map">
	   SELECT /* customer.selectUserDetail */
	         USID as usid
	       , SUBS_ID as subsId
	       , NAME as name
	       , STATUS as status
	       , PAYMENT_PLAN as paymentPlan
	       , PAYMENT_METHOD as paymentMethod
	       , OS as os
	       , MDN as mdn
	       , TEL as tel
	       , EMAIL_ADDR as emailAddr
	       , CERT_TOKEN as certToken
	       , PUSH_TOKEN as pushToken
	       , FST_RG_USID as fstRgUsid
	       , FST_RG_DT as fstRgDt
	   FROM TB_CUST_MEMBER
	   WHERE USID = #{usid}
	</select>
	
	<select id="selectCarDetail" parameterType="Long" resultType="Map">
	   SELECT  /* customer.selectCarDetail */
	         SN_ID as snId
	       , USID as usid
	       , CAR_NO as carNo
	       , FST_RG_USID as fstRgUsid
	       , FST_RG_DT as fstRgDt
	   FROM TB_CUST_CAR
	   WHERE USID = #{usid}
	</select>
	
	<insert id="insertCar" parameterType="Map">
        INSERT /* customer.insertCar */
        INTO TB_CUST_CAR (
              USID
            , CAR_NO
            , FST_RG_USID
            , FST_RG_DT
            , LST_CH_USID
            , LST_CH_DT
        ) VALUES (
              #{usid}
            , #{carNo}
            , #{usid}
            , NOW()
            , #{usid}
            , NOW()
        )
    </insert>
    
    <update id="updateCarNumber" parameterType="Map">
        UPDATE /* customer.updateCarNumber */
        TB_CUST_CAR
        SET CAR_NO = #{carNo}
            , LST_CH_USID = #{usid}
            , LST_CH_DT = NOW()
        WHERE USID = #{usid}
    </update>
    
    <update id="updateChargeCondition" parameterType="Map">
        UPDATE /* customer.updateChargeCondition */
        TB_CUST_CHARGE_COND
        SET CHARGE_COND = #{chargeCond}
            , WATT = #{watt}
            , LST_CH_USID = #{usid}
            , LST_CH_DT = NOW()
        WHERE USID = #{usid}
    </update>
    
    <update id="updateLoseDt" parameterType="Map">
        UPDATE /* customer.updateLoseDt */
        TB_CUST_RFID_CARD
        SET STATUS = #{status}
            , ST_DT = NOW()
            , LST_CH_USID = #{usid}
            , LST_CH_DT = NOW()
        WHERE SN_ID = #{snId}
    </update>
    
    <update id="updateRfidApplStatus" parameterType="Map">
        UPDATE /* customer.updateRfidApplStatus */
        TB_CUST_RFID_APPLICATION
        SET STATUS = #{status}
            , LST_CH_USID = #{usid}
            , LST_CH_DT = NOW()
        <where>
            <if test="status != null and status == '308108'">
               AND CARD_NO = (SELECT CARD_NO FROM TB_CUST_RFID_CARD WHERE SN_ID = #{snId})
            </if>
            <if test="status != null and status == '308107'">
               AND CARD_NO = #{cardNo}
            </if>
        </where>
    </update>
    
    <update id="updateRfidStatus" parameterType="Map">
        UPDATE /* customer.updateRfidStatus */
        TB_CUST_RFID_CARD
        SET STATUS = #{status}
            , LST_CH_USID = #{usid}
            , LST_CH_DT = NOW()
        WHERE CARD_NO = #{cardNo}
    </update>
	   
    <select id="isCardNo" parameterType="Map" resultType="int">
       SELECT  /* customer.isCardNo */
             COUNT(*)
       FROM TB_CUST_RFID_CARD
       WHERE CARD_NO = #{cardNo}
    </select>
	   
    <select id="isOverCardNo" parameterType="Map" resultType="int">
       SELECT  /* customer.isOverCardNo */
             COUNT(*)
       FROM TB_CUST_RFID_CARD
       WHERE CARD_NO = #{cardNo}
           AND STATUS != '308101'
    </select>
	   
    <select id="isValidCardNo" parameterType="Map" resultType="int">
       SELECT  /* customer.isValidCardNo */
             COUNT(*)
       FROM TB_CUST_RFID_CARD
       WHERE CARD_NO = #{cardNo}
           AND USID = #{usid}
    </select>
    
    <insert id="insertCardReq" parameterType="Map">
        INSERT /* customer.insertCardReq */
        INTO TB_CUST_RFID_APPLICATION (
              USID
            , STATUS
            , ADDR
            , FST_RG_USID
            , FST_RG_DT
            , LST_CH_USID
            , LST_CH_DT
        ) VALUES (
              #{usid}
            , #{status}
            , #{addr}
            , #{usid}
            , NOW()
            , #{usid}
            , NOW()
        )
    </insert>
    
</mapper>