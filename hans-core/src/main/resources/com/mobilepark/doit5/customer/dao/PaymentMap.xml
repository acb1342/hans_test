<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="payment">

    <!-- 월별이용금액(기간설정) -->
    <select id="selectPeriodHistList" parameterType="map" resultType="map">
        SELECT /* payment.selectPeriodHistList */
              USE_YM as useYm
			, '신용카드 자동이체' as payType
			, BASIC_FEE as basicFee
			, CARD_ISSUING_COST as cardIssuingCost
			, CHARGE_PRICE as chargePrice 
			, TRUNCATE(CHARGE_AMT / 1000, 1) as chargeAmt
			, PAYMENT_FEE as paymenFee
        FROM TB_STAT_PAYMENT_MONTH
		WHERE USID = #{usid}
		  AND #{fromYm} &lt;= USE_YM
		  AND #{toYm} >= USE_YM
        LIMIT #{pagination.startRow}, #{pagination.size}
    </select>
    
    
    <!-- 월별이용금액(기간설정) count -->
    <select id="selectPeriodHistTotalCnt" parameterType="map" resultType="int">
    	/* payment.selectPeriodHistTotalCnt */
    	SELECT
    		SUM(totalCnt)
    	FROM (
    	<if test="isCurrentMonth != null and isCurrentMonth == true">
			SELECT 1 as totalCnt
			UNION ALL
			</if>
	        SELECT
	              COUNT(*) as totalCnt
	        FROM TB_STAT_PAYMENT_MONTH
			WHERE USID = #{usid}
			  AND #{fromYm} &lt;= USE_YM
			<choose>
			<when test="isCurrentMonth != null and isCurrentMonth == true">
				AND #{toYm} > USE_YM
			</when>
			<otherwise>
				AND #{toYm} >= USE_YM
			</otherwise>
			</choose>
		) T
    </select>
    
    
    <!-- 월별이용금액(월별) -->
    <select id="selectMonthlyHist" parameterType="map" resultType="map">
		SELECT /* payment.selectMonthlyHist */
			  '신용카드 자동이체' AS payType
			, basicFee
			, cardIssuingCost
			, chargePrice
			, chargeAmt
			, basicFee + cardIssuingCost + chargePrice AS paymenFee
			, payStartDt
			, payEndDt
		FROM (
			SELECT
                  IFNULL((SELECT BASIC_FEE FROM TB_STAT_PAYMENT_MONTH WHERE USE_YM = T.YM AND USID = #{usid}),0) AS basicFee
                , IFNULL((SELECT CARD_ISSUING_COST FROM TB_STAT_PAYMENT_MONTH WHERE USE_YM = T.YM AND USID = #{usid}),0) AS cardIssuingCost
			    , IFNULL((SELECT CHARGE_PRICE FROM TB_STAT_PAYMENT_MONTH WHERE USE_YM = T.YM AND USID = #{usid}),0) AS chargePrice
			    , IFNULL((SELECT TRUNCATE(CHARGE_AMT / 1000, 1) FROM TB_STAT_PAYMENT_MONTH WHERE USE_YM = T.YM AND USID = #{usid}),0) AS chargeAmt
				 <!--  IFNULL((SELECT FEE FROM TB_BILL_PRICE_LIST WHERE PRICE_TYPE = '502101' AND T.YM >= LEFT(START_YMD, 6) AND T.YM &lt;= LEFT(END_YMD, 6)), 0) AS basicFee
				, IFNULL((SELECT COUNT(*) * (SELECT FEE FROM TB_BILL_PRICE_LIST WHERE PRICE_TYPE = '502102' AND T.YM >= LEFT(START_YMD, 6) AND T.YM &lt;= LEFT(END_YMD, 6)) FROM TB_CUST_RFID_APPLICATION WHERE STATUS != '308102' AND T.YM = DATE_FORMAT(RC_DT, '%Y%m')), 0) AS cardIssuingCost
				, IFNULL((SELECT SUM(CHARGE_FEE) FROM TB_HIST_CHARGE WHERE USID = T.USID AND DATE_FORMAT(END_DT, '%Y%m') = T.YM), 0) AS chargePrice 
				, TRUNCATE(IFNULL((SELECT SUM(CHARGE_AMT) FROM TB_HIST_CHARGE WHERE USID = T.USID AND DATE_FORMAT(END_DT, '%Y%m') = T.YM), 0) / 1000, 1) AS chargeAmt -->
				, DATE_FORMAT(STR_TO_DATE(T.YMD, '%Y%m%d'), '%Y.%m.01') AS payStartDt
				, DATE_FORMAT(LAST_DAY(STR_TO_DATE(T.YMD, '%Y%m%d')), '%Y.%m.%d') AS payEndDt
			FROM (SELECT #{searchYm} AS YM, #{searchYmd} AS YMD, #{usid} AS USID) T
		) T
    </select>
    
    
    <!-- 월별 충전요금 상세내역 -->
    <select id="selectMonthlyHistDetailList" parameterType="map" resultType="map">
        SELECT /* payment.selectMonthlyHistDetailList */
              hc.START_DT as startDt
            , hc.END_DT as endDt
            , CONCAT(LPAD(FLOOR(hc.CHARGE_TIME / 3600), 2, '0'), ':', LPAD(FLOOR(MOD(hc.CHARGE_TIME, 3600) / 60), 2, '0'), ':', LPAD(MOD(hc.CHARGE_TIME, 60), 2, '0')) as chargeTime
            , hc.BD_NAME as bdName
            , hc.CHARGE_RATE as chargeRateCd
            , CASE WHEN hc.CHARGE_RATE = '402201' THEN '완속' ELSE '급속' END as chargeRate
            , TRUNCATE(hc.CHARGE_AMT / 1000, 1) as chargeAmt
            , hc.CHARGE_FEE as chargeFee
            , hc.CERT_TYPE as certTypeCd
            , CASE WHEN hc.CERT_TYPE = '315101' THEN 'NFC' ELSE CONCAT('회원카드', CONCAT('(', RIGHT(hc.CERT_CARD_NO, 4), ')')) END as certType
            , (SELECT NAME FROM TB_ELCG_BD_GROUP WHERE BD_GROUP_ID = hc.BD_GROUP_ID LIMIT 1) as bdGroupName
        FROM TB_HIST_CHARGE hc
        WHERE hc.USID = #{usid}
          AND DATE_FORMAT(hc.END_DT, '%Y%m') = #{searchYm}
        ORDER BY hc.FST_RG_DT ASC
    </select>
    
    
    <!-- 월별 충전요금 상세내역 -->
    <select id="selectMonthlyHistDetailCount" parameterType="map" resultType="map">
        SELECT /* payment.selectMonthlyHistDetailCount */
              COUNT(*) as totalChargeCount
             , IFNULL(SUM(CHARGE_FEE), 0) as totalChargeFee
        FROM TB_HIST_CHARGE
        WHERE USID = #{usid}
          AND DATE_FORMAT(END_DT, '%Y%m') = #{searchYm}
    </select>
    
    
    <!-- 최근 3개월간 월별 총 이용금액 그래프 -->
    <select id="selectMonthlyHistGraph" parameterType="map" resultType="map">
    <!-- SELECT /* payment.selectMonthlyHistGraph */
          LEFT(A.YM, 4) as year
        , RIGHT(A.YM, 2) as month
        , (SELECT IFNULL(SUM(CHARGE_FEE), 0) FROM TB_HIST_CHARGE WHERE USID = #{usid} AND DATE_FORMAT(END_DT, '%Y%m') = A.YM) as charge
        , (SELECT COUNT(*) FROM TB_HIST_CHARGE WHERE USID = #{usid} AND DATE_FORMAT(END_DT, '%Y%m') = A.YM) as count
    FROM (
        SELECT DATE_FORMAT(NOW(), '%Y%m') as YM
    ) A
    UNION ALL -->
    SELECT /* payment.selectMonthlyHistGraph */
    	  LEFT(A.YM, 4) as year
        , RIGHT(A.YM, 2) as month
        , IFNULL((SELECT BASIC_FEE + CARD_ISSUING_COST + CHARGE_PRICE FROM TB_STAT_PAYMENT_MONTH WHERE USID = #{usid} AND USE_YM = A.YM), 0) as charge
        , IFNULL((SELECT CHARGE_CNT FROM TB_STAT_PAYMENT_MONTH WHERE USID = #{usid} AND USE_YM = A.YM), 0) as count
    FROM (
    	SELECT DATE_FORMAT(NOW(), '%Y%m') as YM
    	UNION ALL
    	SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL - 1 MONTH), '%Y%m') as YM
        UNION ALL
        SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL - 2 MONTH), '%Y%m') as YM
   	) A
    </select>
    
    
    <!-- 월별 이용금액(최근 3개월) -->
    <select id="selectMonthlyHistList" parameterType="map" resultType="map">
        SELECT
        	  LEFT(A.YM, 4) as year
            , RIGHT(A.YM, 2) as month
            , (SELECT IFNULL(PAYMENT_FEE, 0) FROM TB_STAT_PAYMENT_MONTH WHERE USE_YM = A.YM AND USID = #{usid}) AS paymentFee
            , (SELECT IFNULL(CHARGE_PRICE, 0) FROM TB_STAT_PAYMENT_MONTH WHERE USE_YM = A.YM AND USID = #{usid}) AS chargeFee
            , (SELECT IFNULL(BASIC_FEE, 0) FROM TB_STAT_PAYMENT_MONTH WHERE USE_YM = A.YM AND USID = #{usid}) AS basicFee
            , (SELECT IFNULL(CARD_ISSUING_COST, 0) FROM TB_STAT_PAYMENT_MONTH WHERE USE_YM = A.YM AND USID = #{usid}) AS cardIssuingCost
        FROM 
            (
            SELECT DATE_FORMAT(NOW(), '%Y%m') as YM
            UNION ALL
            SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL - 1 MONTH), '%Y%m') as YM
            UNION ALL
            SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL - 2 MONTH), '%Y%m') as YM
            ) A
    </select>
    
    
    <!-- 월별이용금액 상세(APP 전용) -->
    <select id="selectDetailHist" parameterType="map" resultType="map">
		SELECT /* payment.selectDetailHist */
	  		  CHARGE_PRICE AS chargeFee
	        , BASIC_FEE AS basicFee
	        , CARD_ISSUING_CNT AS cardIssuingCnt
	        , CARD_ISSUING_COST AS cardIssuingCost
	        , PAYMENT_FEE AS paymentFee
		FROM TB_STAT_PAYMENT_MONTH
		WHERE USE_YM = #{fromYm}
		  AND USID = #{usid}
    </select>
    
    
    <!-- 월별이용금액 상세 리스트(APP 전용) -->
    <select id="selectDetailHistList" parameterType="map" resultType="map">
        SELECT /* payment.selectDetailHistList */
	          hc.START_DT as startDt
	        , hc.END_DT as endDt
	        , CONCAT(LPAD(FLOOR(hc.CHARGE_TIME / 3600), 2, '0'), ':', LPAD(FLOOR(MOD(hc.CHARGE_TIME, 3600) / 60), 2, '0'), ':', LPAD(MOD(hc.CHARGE_TIME, 60), 2, '0')) as chargeTime
	        , RIGHT(hc.CERT_CARD_NO, 4) as certCardNo
	        , CASE WHEN CHARGE_RATE = '402201' THEN '완속' ELSE '급속' END as chargeRate
	        , hc.CHARGE_RATE as chargeRateCd
	        , TRUNCATE(hc.CHARGE_AMT / 1000, 1) as chargeAmt
	        , hc.CHARGE_FEE as chargeFee
	        , hc.BD_NAME as bdName
	        , hc.CERT_TYPE as certTypeCd
            , hc.CERT_CARD_NO as certCardNo
            , (SELECT NAME FROM TB_ELCG_BD_GROUP WHERE BD_GROUP_ID = hc.BD_GROUP_ID LIMIT 1) as bdGroupName
        FROM TB_HIST_CHARGE hc
        WHERE hc.USID = #{usid} 
          AND DATE_FORMAT(hc.END_DT, '%Y%m') = #{fromYm}
        ORDER BY hc.FST_RG_DT DESC
    </select>
    
    <update id="updateBillkey" parameterType="map">
    	UPDATE /* payment.updateBillkey */
    		TB_CUST_CREDIT_CARD
    	SET BILLKEY = #{billkey}
    	  , VALID_YN = #{validYn}
    	WHERE USID = #{usid}
    </update>
    
    <update id="updateMemberPayment" parameterType="map">
    	UPDATE  /* payment.updateMemberPayment */
    		TB_CUST_MEMBER
    	SET PAYMENT_PLAN = #{paymentPlan}
    	  , PAYMENT_METHOD = #{paymentMethod}
    	  , STATUS = #{status}
    	WHERE USID = #{usid}
    </update>
    
    <!-- 충전조건 조회 -->
    <select id="selectChargeCond" parameterType="map" resultType="String">
        SELECT  /* payment.selectChargeCond */
            CASE WHEN EXISTS(SELECT 1 FROM TB_ELCG_CHARGE_STATUS WHERE USID = T.USID AND STATUS = '406103')
	            THEN (SELECT CHARGE_COND FROM TB_ELCG_CHARGE_STATUS WHERE USID = T.USID)
	             ELSE (SELECT CHARGE_COND FROM TB_CUST_CHARGE_COND WHERE USID = T.USID) 
            END AS chargeCond
        FROM (SELECT #{usid} AS USID) T
    </select>
    
    <!-- 충전조건 조회 -->
    <select id="selectLastChargerCond" parameterType="map" resultType="String">
        SELECT /* payment.selectLastChargerCond */
            CHARGE_COND
        FROM TB_CUST_CHARGE_COND
        WHERE USID = #{usid}
    </select>
    
    <select id="selectPaymentMonth" parameterType="Long" resultType="map">
    	SELECT /* payment.selectPaymentMonth */
    		  SN_ID AS snId
    		, USE_YM AS useYm
    		, USID AS usid
    	FROM TB_STAT_PAYMENT_MONTH
    	WHERE USE_YM = DATE_FORMAT(NOW(), '%Y%m')
    	  AND USID = #{usid}
    </select>
    
    <insert id="insertPaymentMonthFee" parameterType="map">
    	INSERT /* payment.insertPaymentMonthFee */
    	INTO TB_STAT_PAYMENT_MONTH (
    		  USE_YM
    		, USID
    		, CUST_NAME
    		, START_YMD
    		, END_YMD
    		, BASIC_FEE
    		, CARD_ISSUING_CNT
    		, CARD_ISSUING_COST
    		, CHARGE_CNT
    		, CHARGE_AMT
    		, CHARGE_PRICE
    		, PAYMENT_FEE
    		, FST_RG_USID
    		, FST_RG_DT
    		, LST_CH_USID
    		, LST_CH_DT
    	) VALUES (
    		<choose>
    		<when test="useYm != null and useYm != ''">
    		  #{useYm}
    		</when>
    		<otherwise>
    		  DATE_FORMAT(NOW(), '%Y%m')
    		</otherwise>
    		</choose>
    		, #{usid}
    		, (SELECT NAME FROM TB_CUST_MEMBER WHERE USID = #{usid})
    		, CONCAT(DATE_FORMAT(NOW(), '%Y%m'), '01')
    		, DATE_FORMAT(LAST_DAY(NOW()), '%Y%m%d')
    		<choose>
    		<when test="priceType == '502101'">
    		, (SELECT FEE FROM TB_BILL_PRICE_LIST WHERE PRICE_TYPE = '502101' AND START_YMDHHMI &lt;= DATE_FORMAT(NOW(), '%Y%m%d%H%i') AND END_YMDHHMI > DATE_FORMAT(NOW(), '%Y%m%d%H%i'))
    		, 0
    		, 0
    		, 0
    		, 0
    		, 0
    		, (SELECT FEE FROM TB_BILL_PRICE_LIST WHERE PRICE_TYPE = '502101' AND START_YMDHHMI &lt;= DATE_FORMAT(NOW(), '%Y%m%d%H%i') AND END_YMDHHMI > DATE_FORMAT(NOW(), '%Y%m%d%H%i'))
    		</when>
    		<when test="priceType == '502102'">
    		, 0
    		, #{cardIssuingCnt}
    		, (SELECT FEE FROM TB_BILL_PRICE_LIST WHERE PRICE_TYPE = '502102' AND START_YMDHHMI &lt;= DATE_FORMAT(NOW(), '%Y%m%d%H%i') AND END_YMDHHMI > DATE_FORMAT(NOW(), '%Y%m%d%H%i'))
    		, 0
    		, 0
    		, 0
    		, (SELECT FEE FROM TB_BILL_PRICE_LIST WHERE PRICE_TYPE = '502102' AND START_YMDHHMI &lt;= DATE_FORMAT(NOW(), '%Y%m%d%H%i') AND END_YMDHHMI > DATE_FORMAT(NOW(), '%Y%m%d%H%i'))
    		</when>
    		</choose>
    		, #{usid}
    		, NOW()
    		, #{usid}
    		, NOW()
    	)
    </insert>
    
    <update id="updatePaymentMonthFee" parameterType="map">
    	UPDATE /* payment.updatePaymentMonthFee */
    	TB_STAT_PAYMENT_MONTH
    	SET
    	<choose>
    		<when test="priceType == '502101'">
    		  BASIC_FEE = BASIC_FEE + (SELECT FEE FROM TB_BILL_PRICE_LIST WHERE PRICE_TYPE = '502101' AND START_YMDHHMI &lt;= DATE_FORMAT(NOW(), '%Y%m%d%H%i') AND END_YMDHHMI > DATE_FORMAT(NOW(), '%Y%m%d%H%i'))
    		, PAYMENT_FEE = PAYMENT_FEE + (SELECT FEE FROM TB_BILL_PRICE_LIST WHERE PRICE_TYPE = '502101' AND START_YMDHHMI &lt;= DATE_FORMAT(NOW(), '%Y%m%d%H%i') AND END_YMDHHMI > DATE_FORMAT(NOW(), '%Y%m%d%H%i'))
    		</when>
    		<when test="priceType == '502102'">
    		  CARD_ISSUING_CNT = CARD_ISSUING_CNT + 1
    		, CARD_ISSUING_COST = CARD_ISSUING_COST + (SELECT FEE FROM TB_BILL_PRICE_LIST WHERE PRICE_TYPE = '502102' AND START_YMDHHMI &lt;= DATE_FORMAT(NOW(), '%Y%m%d%H%i') AND END_YMDHHMI > DATE_FORMAT(NOW(), '%Y%m%d%H%i'))
    		, PAYMENT_FEE = PAYMENT_FEE + (SELECT FEE FROM TB_BILL_PRICE_LIST WHERE PRICE_TYPE = '502102' AND START_YMDHHMI &lt;= DATE_FORMAT(NOW(), '%Y%m%d%H%i') AND END_YMDHHMI > DATE_FORMAT(NOW(), '%Y%m%d%H%i'))
    		</when>
   		</choose>
   		WHERE USE_YM = #{useYm}
   		  AND USID = #{usid}
    </update>
    
    <select id="selectPostPayDetail" parameterType="Long" resultType="Map">
        SELECT /* payment.selectPostPayDetail */
              USID as usid
            , CREDIT_CARD_NO as creditCardNo
            , CASE COMPANY 
                WHEN '01' THEN '하나 (구 외환)' WHEN '03' THEN '롯데' WHEN '04' THEN '현대' WHEN '06' THEN '국민' WHEN '11' THEN 'BC' 
                WHEN '12' THEN '삼성' WHEN '14' THEN '신한' WHEN '15' THEN '한미' WHEN '16' THEN 'NH' WHEN '17' THEN '하나 SK'
                WHEN '21' THEN '해외비자' WHEN '22' THEN '해외마스터' WHEN '23' THEN 'JCB' WHEN '24' THEN '해외아멕스' WHEN '25' THEN '해외다이너스' 
              END as companyNm
        FROM TB_CUST_CREDIT_CARD
        WHERE USID = #{usid}
    </select>
    
    <select id="selectPoint" parameterType="Long" resultType="Map">
        SELECT /* payment.selectPoint */
            REMAIN_POINT as remainPoint
        FROM TB_CUST_POINT
        WHERE USID = #{usid}
    </select>
    
    <insert id="insertPoint" parameterType="Map">
        INSERT /* payment.insertPoint */
        INTO  TB_CUST_POINT (
              USID
            , REMAIN_POINT
            , FST_RG_USID
            , FST_RG_DT
            , LST_CH_USID
            , LST_CH_DT
        ) VALUES (
              #{usid}
            , #{remainPoint}
            , #{usid}
            , NOW()
            , #{usid}
            , NOW()
        )
    </insert>
    
    <update id="updatePoint" parameterType="Map">
        UPDATE /* payment.updatePoint */
        TB_CUST_POINT
        SET REMAIN_POINT = #{remainPoint}
            , LST_CH_USID = #{usid}
            , LST_CH_DT = NOW()
        WHERE USID = #{usid}
    </update>
    
</mapper>